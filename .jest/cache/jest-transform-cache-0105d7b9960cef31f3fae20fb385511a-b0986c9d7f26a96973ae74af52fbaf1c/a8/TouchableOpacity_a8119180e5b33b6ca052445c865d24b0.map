{"version":3,"sources":["TouchableOpacity.js"],"names":["TouchableOpacity","state","anim","Animated","Value","_getChildStyleOpacityWithDefault","pressability","Pressability","_createPressabilityConfig","cancelable","props","rejectResponderTermination","disabled","hitSlop","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","onBlur","event","Platform","isTV","_opacityInactive","onFocus","_opacityActive","onLongPress","onPress","onPressIn","dispatchConfig","registrationName","onPressOut","toValue","duration","timing","easing","Easing","inOut","quad","useNativeDriver","start","_setOpacityTo","activeOpacity","opacity","style","getEventHandlers","eventHandlersWithoutBlurAndFocus","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","accessibilityValue","importantForAccessibility","accessibilityLiveRegion","accessibilityViewIsModal","accessibilityElementsHidden","nativeID","testID","onLayout","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","hasTVPreferredFocus","focusable","undefined","hostRef","children","__DEV__","_tvTouchable","TVTouchable","getDisabled","prevProps","prevState","configure","destroy","reset","React","Component","module","exports","forwardRef"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport TVTouchable from './TVTouchable';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\nimport Animated from 'react-native/Libraries/Animated/src/Animated';\nimport Easing from 'react-native/Libraries/Animated/src/Easing';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport flattenStyle from 'react-native/Libraries/StyleSheet/flattenStyle';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\n\ntype TVProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n  nextFocusDown?: ?number,\n  nextFocusForward?: ?number,\n  nextFocusLeft?: ?number,\n  nextFocusRight?: ?number,\n  nextFocusUp?: ?number,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n  ...TVProps,\n\n  activeOpacity?: ?number,\n  style?: ?ViewStyleProp,\n\n  hostRef: React.Ref<typeof Animated.View>,\n|}>;\n\ntype State = $ReadOnly<{|\n  anim: Animated.Value,\n  pressability: Pressability,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hierarchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   state = { count: 0 }\n *\n *   onPress = () => {\n *     this.setState(state => ({\n *       count: state.count + 1\n *     }));\n *   };\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}>\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nclass TouchableOpacity extends React.Component<Props, State> {\n  _tvTouchable: ?TVTouchable;\n\n  state: State = {\n    anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled: this.props.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._opacityInactive(250);\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._opacityActive(150);\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        this._opacityActive(\n          event.dispatchConfig.registrationName === 'onResponderGrant'\n            ? 0\n            : 150,\n        );\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        this._opacityInactive(250);\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  _setOpacityTo(toValue: number, duration: number): void {\n    Animated.timing(this.state.anim, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  }\n\n  _opacityActive(duration: number): void {\n    this._setOpacityTo(this.props.activeOpacity ?? 0.2, duration);\n  }\n\n  _opacityInactive(duration: number): void {\n    this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  }\n\n  _getChildStyleOpacityWithDefault(): number {\n    const opacity = flattenStyle(this.props.style)?.opacity;\n    return typeof opacity === 'number' ? opacity : 1;\n  }\n\n  render(): React.Node {\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {\n      onBlur,\n      onFocus,\n      ...eventHandlersWithoutBlurAndFocus\n    } = this.state.pressability.getEventHandlers();\n\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={this.props.accessibilityState}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        accessibilityValue={this.props.accessibilityValue}\n        importantForAccessibility={this.props.importantForAccessibility}\n        accessibilityLiveRegion={this.props.accessibilityLiveRegion}\n        accessibilityViewIsModal={this.props.accessibilityViewIsModal}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden}\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        nextFocusDown={this.props.nextFocusDown}\n        nextFocusForward={this.props.nextFocusForward}\n        nextFocusLeft={this.props.nextFocusLeft}\n        nextFocusRight={this.props.nextFocusRight}\n        nextFocusUp={this.props.nextFocusUp}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        hitSlop={this.props.hitSlop}\n        focusable={\n          this.props.focusable !== false && this.props.onPress !== undefined\n        }\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {this.props.children}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"cyan\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  componentDidMount(): void {\n    if (Platform.isTV) {\n      this._tvTouchable = new TVTouchable(this, {\n        getDisabled: () => this.props.disabled === true,\n        onBlur: event => {\n          if (this.props.onBlur != null) {\n            this.props.onBlur(event);\n          }\n        },\n        onFocus: event => {\n          if (this.props.onFocus != null) {\n            this.props.onFocus(event);\n          }\n        },\n        onPress: event => {\n          if (this.props.onPress != null) {\n            this.props.onPress(event);\n          }\n        },\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n    if (this.props.disabled !== prevProps.disabled) {\n      this._opacityInactive(250);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.isTV) {\n      if (this._tvTouchable != null) {\n        this._tvTouchable.destroy();\n      }\n    }\n    this.state.pressability.reset();\n  }\n}\n\nmodule.exports = (React.forwardRef((props, hostRef) => (\n  <TouchableOpacity {...props} hostRef={hostRef} />\n)): React.ComponentType<$ReadOnly<$Diff<Props, {|hostRef: mixed|}>>>);\n"]}